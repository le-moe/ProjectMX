ARM GAS  /tmp/ccsMTzma.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB135:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccsMTzma.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** UART_HandleTypeDef huart1;
  44:Core/Src/main.c **** UART_HandleTypeDef huart2;
  45:Core/Src/main.c **** UART_HandleTypeDef huart6;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** static void MX_GPIO_Init(void);
  54:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  55:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  56:Core/Src/main.c **** static void MX_USART6_UART_Init(void);
  57:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /**
  67:Core/Src/main.c ****   * @brief  The application entry point.
  68:Core/Src/main.c ****   * @retval int
  69:Core/Src/main.c ****   */
  70:Core/Src/main.c **** int main(void)
  71:Core/Src/main.c **** {
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE END 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Core/Src/main.c ****   HAL_Init();
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Configure the system clock */
  86:Core/Src/main.c ****   SystemClock_Config();
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  /tmp/ccsMTzma.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Initialize all configured peripherals */
  93:Core/Src/main.c ****   MX_GPIO_Init();
  94:Core/Src/main.c ****   MX_USART1_UART_Init();
  95:Core/Src/main.c ****   MX_USART2_UART_Init();
  96:Core/Src/main.c ****   MX_USART6_UART_Init();
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END 2 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Infinite loop */
 102:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 103:Core/Src/main.c ****   while (1)
 104:Core/Src/main.c ****   {
 105:Core/Src/main.c ****     /* USER CODE END WHILE */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 108:Core/Src/main.c ****   }
 109:Core/Src/main.c ****   /* USER CODE END 3 */
 110:Core/Src/main.c **** }
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /**
 113:Core/Src/main.c ****   * @brief System Clock Configuration
 114:Core/Src/main.c ****   * @retval None
 115:Core/Src/main.c ****   */
 116:Core/Src/main.c **** void SystemClock_Config(void)
 117:Core/Src/main.c **** {
 118:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 119:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 124:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 127:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 128:Core/Src/main.c ****   */
 129:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 140:Core/Src/main.c ****   {
 141:Core/Src/main.c ****     Error_Handler();
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 145:Core/Src/main.c ****   */
ARM GAS  /tmp/ccsMTzma.s 			page 4


 146:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 154:Core/Src/main.c ****   {
 155:Core/Src/main.c ****     Error_Handler();
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /**
 160:Core/Src/main.c ****   * @brief USART1 Initialization Function
 161:Core/Src/main.c ****   * @param None
 162:Core/Src/main.c ****   * @retval None
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 165:Core/Src/main.c **** {
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 174:Core/Src/main.c ****   huart1.Instance = USART1;
 175:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 176:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 177:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 178:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 179:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 180:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 181:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 182:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 183:Core/Src/main.c ****   {
 184:Core/Src/main.c ****     Error_Handler();
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** }
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** /**
 193:Core/Src/main.c ****   * @brief USART2 Initialization Function
 194:Core/Src/main.c ****   * @param None
 195:Core/Src/main.c ****   * @retval None
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 198:Core/Src/main.c **** {
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
ARM GAS  /tmp/ccsMTzma.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 207:Core/Src/main.c ****   huart2.Instance = USART2;
 208:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 209:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 210:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 211:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 212:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 213:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 214:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 215:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 216:Core/Src/main.c ****   {
 217:Core/Src/main.c ****     Error_Handler();
 218:Core/Src/main.c ****   }
 219:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** }
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** /**
 226:Core/Src/main.c ****   * @brief USART6 Initialization Function
 227:Core/Src/main.c ****   * @param None
 228:Core/Src/main.c ****   * @retval None
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c **** static void MX_USART6_UART_Init(void)
 231:Core/Src/main.c **** {
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 0 */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE END USART6_Init 0 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 1 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE END USART6_Init 1 */
 240:Core/Src/main.c ****   huart6.Instance = USART6;
 241:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 242:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 243:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 244:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 245:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 246:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 247:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 248:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 249:Core/Src/main.c ****   {
 250:Core/Src/main.c ****     Error_Handler();
 251:Core/Src/main.c ****   }
 252:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 2 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE END USART6_Init 2 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** }
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** /**
 259:Core/Src/main.c ****   * @brief GPIO Initialization Function
ARM GAS  /tmp/ccsMTzma.s 			page 6


 260:Core/Src/main.c ****   * @param None
 261:Core/Src/main.c ****   * @retval None
 262:Core/Src/main.c ****   */
 263:Core/Src/main.c **** static void MX_GPIO_Init(void)
 264:Core/Src/main.c **** {
  28              		.loc 1 264 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 8BB0     		sub	sp, sp, #44
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 265:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 265 3 view .LVU1
  42              		.loc 1 265 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 266:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 267:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 270:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 270 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 270 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 270 3 view .LVU5
  54 0012 224B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 270 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 270 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 270 3 view .LVU8
 271:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 271 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 271 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 271 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
ARM GAS  /tmp/ccsMTzma.s 			page 7


  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 271 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0292     		str	r2, [sp, #8]
  78              		.loc 1 271 3 view .LVU13
  79 0038 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 271 3 view .LVU14
 272:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 272 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 272 3 view .LVU16
  85 003a 0394     		str	r4, [sp, #12]
  86              		.loc 1 272 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 272 3 view .LVU18
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 02F00102 		and	r2, r2, #1
  93 004a 0392     		str	r2, [sp, #12]
  94              		.loc 1 272 3 view .LVU19
  95 004c 039A     		ldr	r2, [sp, #12]
  96              	.LBE6:
  97              		.loc 1 272 3 view .LVU20
 273:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  98              		.loc 1 273 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 273 3 view .LVU22
 101 004e 0494     		str	r4, [sp, #16]
 102              		.loc 1 273 3 view .LVU23
 103 0050 1A6B     		ldr	r2, [r3, #48]
 104 0052 42F00202 		orr	r2, r2, #2
 105 0056 1A63     		str	r2, [r3, #48]
 106              		.loc 1 273 3 view .LVU24
 107 0058 1B6B     		ldr	r3, [r3, #48]
 108 005a 03F00203 		and	r3, r3, #2
 109 005e 0493     		str	r3, [sp, #16]
 110              		.loc 1 273 3 view .LVU25
 111 0060 049B     		ldr	r3, [sp, #16]
 112              	.LBE7:
 113              		.loc 1 273 3 view .LVU26
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 276:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 114              		.loc 1 276 3 view .LVU27
 115 0062 0F4D     		ldr	r5, .L3+4
 116 0064 2246     		mov	r2, r4
 117 0066 2021     		movs	r1, #32
 118 0068 2846     		mov	r0, r5
 119 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL0:
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 279:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 121              		.loc 1 279 3 view .LVU28
ARM GAS  /tmp/ccsMTzma.s 			page 8


 122              		.loc 1 279 23 is_stmt 0 view .LVU29
 123 006e 4FF40053 		mov	r3, #8192
 124 0072 0593     		str	r3, [sp, #20]
 280:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 125              		.loc 1 280 3 is_stmt 1 view .LVU30
 126              		.loc 1 280 24 is_stmt 0 view .LVU31
 127 0074 4FF40413 		mov	r3, #2162688
 128 0078 0693     		str	r3, [sp, #24]
 281:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 129              		.loc 1 281 3 is_stmt 1 view .LVU32
 130              		.loc 1 281 24 is_stmt 0 view .LVU33
 131 007a 0794     		str	r4, [sp, #28]
 282:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 132              		.loc 1 282 3 is_stmt 1 view .LVU34
 133 007c 05A9     		add	r1, sp, #20
 134 007e 0948     		ldr	r0, .L3+8
 135 0080 FFF7FEFF 		bl	HAL_GPIO_Init
 136              	.LVL1:
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 285:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 137              		.loc 1 285 3 view .LVU35
 138              		.loc 1 285 23 is_stmt 0 view .LVU36
 139 0084 2023     		movs	r3, #32
 140 0086 0593     		str	r3, [sp, #20]
 286:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 141              		.loc 1 286 3 is_stmt 1 view .LVU37
 142              		.loc 1 286 24 is_stmt 0 view .LVU38
 143 0088 0123     		movs	r3, #1
 144 008a 0693     		str	r3, [sp, #24]
 287:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 145              		.loc 1 287 3 is_stmt 1 view .LVU39
 146              		.loc 1 287 24 is_stmt 0 view .LVU40
 147 008c 0794     		str	r4, [sp, #28]
 288:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 148              		.loc 1 288 3 is_stmt 1 view .LVU41
 149              		.loc 1 288 25 is_stmt 0 view .LVU42
 150 008e 0894     		str	r4, [sp, #32]
 289:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 151              		.loc 1 289 3 is_stmt 1 view .LVU43
 152 0090 05A9     		add	r1, sp, #20
 153 0092 2846     		mov	r0, r5
 154 0094 FFF7FEFF 		bl	HAL_GPIO_Init
 155              	.LVL2:
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 292:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 293:Core/Src/main.c **** }
 156              		.loc 1 293 1 is_stmt 0 view .LVU44
 157 0098 0BB0     		add	sp, sp, #44
 158              	.LCFI2:
 159              		.cfi_def_cfa_offset 12
 160              		@ sp needed
 161 009a 30BD     		pop	{r4, r5, pc}
 162              	.L4:
 163              		.align	2
 164              	.L3:
ARM GAS  /tmp/ccsMTzma.s 			page 9


 165 009c 00380240 		.word	1073887232
 166 00a0 00000240 		.word	1073872896
 167 00a4 00080240 		.word	1073874944
 168              		.cfi_endproc
 169              	.LFE135:
 171              		.section	.text.Error_Handler,"ax",%progbits
 172              		.align	1
 173              		.global	Error_Handler
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 178              	Error_Handler:
 179              	.LFB136:
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c **** /* USER CODE END 4 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** /**
 300:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 301:Core/Src/main.c ****   * @retval None
 302:Core/Src/main.c ****   */
 303:Core/Src/main.c **** void Error_Handler(void)
 304:Core/Src/main.c **** {
 180              		.loc 1 304 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ Volatile: function does not return.
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 305:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 306:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 307:Core/Src/main.c ****   __disable_irq();
 186              		.loc 1 307 3 view .LVU46
 187              	.LBB8:
 188              	.LBI8:
 189              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  /tmp/ccsMTzma.s 			page 10


  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccsMTzma.s 			page 11


  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsMTzma.s 			page 12


 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 190              		.loc 2 140 27 view .LVU47
 191              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 192              		.loc 2 142 3 view .LVU48
 193              		.syntax unified
 194              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 195 0000 72B6     		cpsid i
 196              	@ 0 "" 2
 197              		.thumb
 198              		.syntax unified
 199              	.L6:
 200              	.LBE9:
 201              	.LBE8:
 308:Core/Src/main.c ****   while (1)
 202              		.loc 1 308 3 discriminator 1 view .LVU49
 309:Core/Src/main.c ****   {
 310:Core/Src/main.c ****   }
 203              		.loc 1 310 3 discriminator 1 view .LVU50
 308:Core/Src/main.c ****   while (1)
 204              		.loc 1 308 9 discriminator 1 view .LVU51
 205 0002 FEE7     		b	.L6
 206              		.cfi_endproc
 207              	.LFE136:
 209              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 210              		.align	1
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 215              	MX_USART1_UART_Init:
 216              	.LFB132:
 165:Core/Src/main.c **** 
 217              		.loc 1 165 1 view -0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221 0000 08B5     		push	{r3, lr}
 222              	.LCFI3:
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 3, -8
 225              		.cfi_offset 14, -4
 174:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 226              		.loc 1 174 3 view .LVU53
 174:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 227              		.loc 1 174 19 is_stmt 0 view .LVU54
 228 0002 0A48     		ldr	r0, .L11
 229 0004 0A4B     		ldr	r3, .L11+4
 230 0006 0360     		str	r3, [r0]
 175:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 231              		.loc 1 175 3 is_stmt 1 view .LVU55
 175:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
ARM GAS  /tmp/ccsMTzma.s 			page 13


 232              		.loc 1 175 24 is_stmt 0 view .LVU56
 233 0008 4FF4E133 		mov	r3, #115200
 234 000c 4360     		str	r3, [r0, #4]
 176:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 235              		.loc 1 176 3 is_stmt 1 view .LVU57
 176:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 236              		.loc 1 176 26 is_stmt 0 view .LVU58
 237 000e 0023     		movs	r3, #0
 238 0010 8360     		str	r3, [r0, #8]
 177:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 239              		.loc 1 177 3 is_stmt 1 view .LVU59
 177:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 240              		.loc 1 177 24 is_stmt 0 view .LVU60
 241 0012 C360     		str	r3, [r0, #12]
 178:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 242              		.loc 1 178 3 is_stmt 1 view .LVU61
 178:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 243              		.loc 1 178 22 is_stmt 0 view .LVU62
 244 0014 0361     		str	r3, [r0, #16]
 179:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 245              		.loc 1 179 3 is_stmt 1 view .LVU63
 179:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 246              		.loc 1 179 20 is_stmt 0 view .LVU64
 247 0016 0C22     		movs	r2, #12
 248 0018 4261     		str	r2, [r0, #20]
 180:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 249              		.loc 1 180 3 is_stmt 1 view .LVU65
 180:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 250              		.loc 1 180 25 is_stmt 0 view .LVU66
 251 001a 8361     		str	r3, [r0, #24]
 181:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 252              		.loc 1 181 3 is_stmt 1 view .LVU67
 181:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 253              		.loc 1 181 28 is_stmt 0 view .LVU68
 254 001c C361     		str	r3, [r0, #28]
 182:Core/Src/main.c ****   {
 255              		.loc 1 182 3 is_stmt 1 view .LVU69
 182:Core/Src/main.c ****   {
 256              		.loc 1 182 7 is_stmt 0 view .LVU70
 257 001e FFF7FEFF 		bl	HAL_UART_Init
 258              	.LVL3:
 182:Core/Src/main.c ****   {
 259              		.loc 1 182 6 view .LVU71
 260 0022 00B9     		cbnz	r0, .L10
 190:Core/Src/main.c **** 
 261              		.loc 1 190 1 view .LVU72
 262 0024 08BD     		pop	{r3, pc}
 263              	.L10:
 184:Core/Src/main.c ****   }
 264              		.loc 1 184 5 is_stmt 1 view .LVU73
 265 0026 FFF7FEFF 		bl	Error_Handler
 266              	.LVL4:
 267              	.L12:
 268 002a 00BF     		.align	2
 269              	.L11:
 270 002c 00000000 		.word	.LANCHOR0
 271 0030 00100140 		.word	1073811456
ARM GAS  /tmp/ccsMTzma.s 			page 14


 272              		.cfi_endproc
 273              	.LFE132:
 275              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 276              		.align	1
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 281              	MX_USART2_UART_Init:
 282              	.LFB133:
 198:Core/Src/main.c **** 
 283              		.loc 1 198 1 view -0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287 0000 08B5     		push	{r3, lr}
 288              	.LCFI4:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 3, -8
 291              		.cfi_offset 14, -4
 207:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 292              		.loc 1 207 3 view .LVU75
 207:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 293              		.loc 1 207 19 is_stmt 0 view .LVU76
 294 0002 0A48     		ldr	r0, .L17
 295 0004 0A4B     		ldr	r3, .L17+4
 296 0006 0360     		str	r3, [r0]
 208:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 297              		.loc 1 208 3 is_stmt 1 view .LVU77
 208:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 298              		.loc 1 208 24 is_stmt 0 view .LVU78
 299 0008 4FF4E133 		mov	r3, #115200
 300 000c 4360     		str	r3, [r0, #4]
 209:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 301              		.loc 1 209 3 is_stmt 1 view .LVU79
 209:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 302              		.loc 1 209 26 is_stmt 0 view .LVU80
 303 000e 0023     		movs	r3, #0
 304 0010 8360     		str	r3, [r0, #8]
 210:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 305              		.loc 1 210 3 is_stmt 1 view .LVU81
 210:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 306              		.loc 1 210 24 is_stmt 0 view .LVU82
 307 0012 C360     		str	r3, [r0, #12]
 211:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 308              		.loc 1 211 3 is_stmt 1 view .LVU83
 211:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 309              		.loc 1 211 22 is_stmt 0 view .LVU84
 310 0014 0361     		str	r3, [r0, #16]
 212:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 311              		.loc 1 212 3 is_stmt 1 view .LVU85
 212:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 312              		.loc 1 212 20 is_stmt 0 view .LVU86
 313 0016 0C22     		movs	r2, #12
 314 0018 4261     		str	r2, [r0, #20]
 213:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 315              		.loc 1 213 3 is_stmt 1 view .LVU87
 213:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /tmp/ccsMTzma.s 			page 15


 316              		.loc 1 213 25 is_stmt 0 view .LVU88
 317 001a 8361     		str	r3, [r0, #24]
 214:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 318              		.loc 1 214 3 is_stmt 1 view .LVU89
 214:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 319              		.loc 1 214 28 is_stmt 0 view .LVU90
 320 001c C361     		str	r3, [r0, #28]
 215:Core/Src/main.c ****   {
 321              		.loc 1 215 3 is_stmt 1 view .LVU91
 215:Core/Src/main.c ****   {
 322              		.loc 1 215 7 is_stmt 0 view .LVU92
 323 001e FFF7FEFF 		bl	HAL_UART_Init
 324              	.LVL5:
 215:Core/Src/main.c ****   {
 325              		.loc 1 215 6 view .LVU93
 326 0022 00B9     		cbnz	r0, .L16
 223:Core/Src/main.c **** 
 327              		.loc 1 223 1 view .LVU94
 328 0024 08BD     		pop	{r3, pc}
 329              	.L16:
 217:Core/Src/main.c ****   }
 330              		.loc 1 217 5 is_stmt 1 view .LVU95
 331 0026 FFF7FEFF 		bl	Error_Handler
 332              	.LVL6:
 333              	.L18:
 334 002a 00BF     		.align	2
 335              	.L17:
 336 002c 00000000 		.word	.LANCHOR1
 337 0030 00440040 		.word	1073759232
 338              		.cfi_endproc
 339              	.LFE133:
 341              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 342              		.align	1
 343              		.syntax unified
 344              		.thumb
 345              		.thumb_func
 347              	MX_USART6_UART_Init:
 348              	.LFB134:
 231:Core/Src/main.c **** 
 349              		.loc 1 231 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353 0000 08B5     		push	{r3, lr}
 354              	.LCFI5:
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 3, -8
 357              		.cfi_offset 14, -4
 240:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 358              		.loc 1 240 3 view .LVU97
 240:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 359              		.loc 1 240 19 is_stmt 0 view .LVU98
 360 0002 0A48     		ldr	r0, .L23
 361 0004 0A4B     		ldr	r3, .L23+4
 362 0006 0360     		str	r3, [r0]
 241:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 363              		.loc 1 241 3 is_stmt 1 view .LVU99
ARM GAS  /tmp/ccsMTzma.s 			page 16


 241:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 364              		.loc 1 241 24 is_stmt 0 view .LVU100
 365 0008 4FF4E133 		mov	r3, #115200
 366 000c 4360     		str	r3, [r0, #4]
 242:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 367              		.loc 1 242 3 is_stmt 1 view .LVU101
 242:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 368              		.loc 1 242 26 is_stmt 0 view .LVU102
 369 000e 0023     		movs	r3, #0
 370 0010 8360     		str	r3, [r0, #8]
 243:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 371              		.loc 1 243 3 is_stmt 1 view .LVU103
 243:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 372              		.loc 1 243 24 is_stmt 0 view .LVU104
 373 0012 C360     		str	r3, [r0, #12]
 244:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 374              		.loc 1 244 3 is_stmt 1 view .LVU105
 244:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 375              		.loc 1 244 22 is_stmt 0 view .LVU106
 376 0014 0361     		str	r3, [r0, #16]
 245:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 377              		.loc 1 245 3 is_stmt 1 view .LVU107
 245:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 378              		.loc 1 245 20 is_stmt 0 view .LVU108
 379 0016 0C22     		movs	r2, #12
 380 0018 4261     		str	r2, [r0, #20]
 246:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 381              		.loc 1 246 3 is_stmt 1 view .LVU109
 246:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 382              		.loc 1 246 25 is_stmt 0 view .LVU110
 383 001a 8361     		str	r3, [r0, #24]
 247:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 384              		.loc 1 247 3 is_stmt 1 view .LVU111
 247:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 385              		.loc 1 247 28 is_stmt 0 view .LVU112
 386 001c C361     		str	r3, [r0, #28]
 248:Core/Src/main.c ****   {
 387              		.loc 1 248 3 is_stmt 1 view .LVU113
 248:Core/Src/main.c ****   {
 388              		.loc 1 248 7 is_stmt 0 view .LVU114
 389 001e FFF7FEFF 		bl	HAL_UART_Init
 390              	.LVL7:
 248:Core/Src/main.c ****   {
 391              		.loc 1 248 6 view .LVU115
 392 0022 00B9     		cbnz	r0, .L22
 256:Core/Src/main.c **** 
 393              		.loc 1 256 1 view .LVU116
 394 0024 08BD     		pop	{r3, pc}
 395              	.L22:
 250:Core/Src/main.c ****   }
 396              		.loc 1 250 5 is_stmt 1 view .LVU117
 397 0026 FFF7FEFF 		bl	Error_Handler
 398              	.LVL8:
 399              	.L24:
 400 002a 00BF     		.align	2
 401              	.L23:
 402 002c 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/ccsMTzma.s 			page 17


 403 0030 00140140 		.word	1073812480
 404              		.cfi_endproc
 405              	.LFE134:
 407              		.section	.text.SystemClock_Config,"ax",%progbits
 408              		.align	1
 409              		.global	SystemClock_Config
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 414              	SystemClock_Config:
 415              	.LFB131:
 117:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 416              		.loc 1 117 1 view -0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 80
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 00B5     		push	{lr}
 421              	.LCFI6:
 422              		.cfi_def_cfa_offset 4
 423              		.cfi_offset 14, -4
 424 0002 95B0     		sub	sp, sp, #84
 425              	.LCFI7:
 426              		.cfi_def_cfa_offset 88
 118:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 427              		.loc 1 118 3 view .LVU119
 118:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 428              		.loc 1 118 22 is_stmt 0 view .LVU120
 429 0004 3422     		movs	r2, #52
 430 0006 0021     		movs	r1, #0
 431 0008 07A8     		add	r0, sp, #28
 432 000a FFF7FEFF 		bl	memset
 433              	.LVL9:
 119:Core/Src/main.c **** 
 434              		.loc 1 119 3 is_stmt 1 view .LVU121
 119:Core/Src/main.c **** 
 435              		.loc 1 119 22 is_stmt 0 view .LVU122
 436 000e 0023     		movs	r3, #0
 437 0010 0293     		str	r3, [sp, #8]
 438 0012 0393     		str	r3, [sp, #12]
 439 0014 0493     		str	r3, [sp, #16]
 440 0016 0593     		str	r3, [sp, #20]
 441 0018 0693     		str	r3, [sp, #24]
 123:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 442              		.loc 1 123 3 is_stmt 1 view .LVU123
 443              	.LBB10:
 123:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 444              		.loc 1 123 3 view .LVU124
 445 001a 0093     		str	r3, [sp]
 123:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 446              		.loc 1 123 3 view .LVU125
 447 001c 1E4A     		ldr	r2, .L31
 448 001e 116C     		ldr	r1, [r2, #64]
 449 0020 41F08051 		orr	r1, r1, #268435456
 450 0024 1164     		str	r1, [r2, #64]
 123:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 451              		.loc 1 123 3 view .LVU126
 452 0026 126C     		ldr	r2, [r2, #64]
ARM GAS  /tmp/ccsMTzma.s 			page 18


 453 0028 02F08052 		and	r2, r2, #268435456
 454 002c 0092     		str	r2, [sp]
 123:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 455              		.loc 1 123 3 view .LVU127
 456 002e 009A     		ldr	r2, [sp]
 457              	.LBE10:
 123:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 458              		.loc 1 123 3 view .LVU128
 124:Core/Src/main.c **** 
 459              		.loc 1 124 3 view .LVU129
 460              	.LBB11:
 124:Core/Src/main.c **** 
 461              		.loc 1 124 3 view .LVU130
 462 0030 0193     		str	r3, [sp, #4]
 124:Core/Src/main.c **** 
 463              		.loc 1 124 3 view .LVU131
 464 0032 1A4A     		ldr	r2, .L31+4
 465 0034 1168     		ldr	r1, [r2]
 466 0036 41F44041 		orr	r1, r1, #49152
 467 003a 1160     		str	r1, [r2]
 124:Core/Src/main.c **** 
 468              		.loc 1 124 3 view .LVU132
 469 003c 1268     		ldr	r2, [r2]
 470 003e 02F44042 		and	r2, r2, #49152
 471 0042 0192     		str	r2, [sp, #4]
 124:Core/Src/main.c **** 
 472              		.loc 1 124 3 view .LVU133
 473 0044 019A     		ldr	r2, [sp, #4]
 474              	.LBE11:
 124:Core/Src/main.c **** 
 475              		.loc 1 124 3 view .LVU134
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 476              		.loc 1 129 3 view .LVU135
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 477              		.loc 1 129 36 is_stmt 0 view .LVU136
 478 0046 0222     		movs	r2, #2
 479 0048 0792     		str	r2, [sp, #28]
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 480              		.loc 1 130 3 is_stmt 1 view .LVU137
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 481              		.loc 1 130 30 is_stmt 0 view .LVU138
 482 004a 0121     		movs	r1, #1
 483 004c 0A91     		str	r1, [sp, #40]
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 484              		.loc 1 131 3 is_stmt 1 view .LVU139
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 485              		.loc 1 131 41 is_stmt 0 view .LVU140
 486 004e 1021     		movs	r1, #16
 487 0050 0B91     		str	r1, [sp, #44]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 488              		.loc 1 132 3 is_stmt 1 view .LVU141
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 489              		.loc 1 132 34 is_stmt 0 view .LVU142
 490 0052 0D92     		str	r2, [sp, #52]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 491              		.loc 1 133 3 is_stmt 1 view .LVU143
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
ARM GAS  /tmp/ccsMTzma.s 			page 19


 492              		.loc 1 133 35 is_stmt 0 view .LVU144
 493 0054 0E93     		str	r3, [sp, #56]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 494              		.loc 1 134 3 is_stmt 1 view .LVU145
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 495              		.loc 1 134 30 is_stmt 0 view .LVU146
 496 0056 0F91     		str	r1, [sp, #60]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 497              		.loc 1 135 3 is_stmt 1 view .LVU147
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 498              		.loc 1 135 30 is_stmt 0 view .LVU148
 499 0058 4FF4A873 		mov	r3, #336
 500 005c 1093     		str	r3, [sp, #64]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 501              		.loc 1 136 3 is_stmt 1 view .LVU149
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 502              		.loc 1 136 30 is_stmt 0 view .LVU150
 503 005e 0423     		movs	r3, #4
 504 0060 1193     		str	r3, [sp, #68]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 505              		.loc 1 137 3 is_stmt 1 view .LVU151
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 506              		.loc 1 137 30 is_stmt 0 view .LVU152
 507 0062 1293     		str	r3, [sp, #72]
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 508              		.loc 1 138 3 is_stmt 1 view .LVU153
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 509              		.loc 1 138 30 is_stmt 0 view .LVU154
 510 0064 1392     		str	r2, [sp, #76]
 139:Core/Src/main.c ****   {
 511              		.loc 1 139 3 is_stmt 1 view .LVU155
 139:Core/Src/main.c ****   {
 512              		.loc 1 139 7 is_stmt 0 view .LVU156
 513 0066 07A8     		add	r0, sp, #28
 514 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 515              	.LVL10:
 139:Core/Src/main.c ****   {
 516              		.loc 1 139 6 view .LVU157
 517 006c 80B9     		cbnz	r0, .L29
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 518              		.loc 1 146 3 is_stmt 1 view .LVU158
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 519              		.loc 1 146 31 is_stmt 0 view .LVU159
 520 006e 0F23     		movs	r3, #15
 521 0070 0293     		str	r3, [sp, #8]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 522              		.loc 1 148 3 is_stmt 1 view .LVU160
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 523              		.loc 1 148 34 is_stmt 0 view .LVU161
 524 0072 0221     		movs	r1, #2
 525 0074 0391     		str	r1, [sp, #12]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 526              		.loc 1 149 3 is_stmt 1 view .LVU162
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 527              		.loc 1 149 35 is_stmt 0 view .LVU163
 528 0076 0023     		movs	r3, #0
 529 0078 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccsMTzma.s 			page 20


 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 530              		.loc 1 150 3 is_stmt 1 view .LVU164
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 531              		.loc 1 150 36 is_stmt 0 view .LVU165
 532 007a 4FF48052 		mov	r2, #4096
 533 007e 0592     		str	r2, [sp, #20]
 151:Core/Src/main.c **** 
 534              		.loc 1 151 3 is_stmt 1 view .LVU166
 151:Core/Src/main.c **** 
 535              		.loc 1 151 36 is_stmt 0 view .LVU167
 536 0080 0693     		str	r3, [sp, #24]
 153:Core/Src/main.c ****   {
 537              		.loc 1 153 3 is_stmt 1 view .LVU168
 153:Core/Src/main.c ****   {
 538              		.loc 1 153 7 is_stmt 0 view .LVU169
 539 0082 02A8     		add	r0, sp, #8
 540 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 541              	.LVL11:
 153:Core/Src/main.c ****   {
 542              		.loc 1 153 6 view .LVU170
 543 0088 20B9     		cbnz	r0, .L30
 157:Core/Src/main.c **** 
 544              		.loc 1 157 1 view .LVU171
 545 008a 15B0     		add	sp, sp, #84
 546              	.LCFI8:
 547              		.cfi_remember_state
 548              		.cfi_def_cfa_offset 4
 549              		@ sp needed
 550 008c 5DF804FB 		ldr	pc, [sp], #4
 551              	.L29:
 552              	.LCFI9:
 553              		.cfi_restore_state
 141:Core/Src/main.c ****   }
 554              		.loc 1 141 5 is_stmt 1 view .LVU172
 555 0090 FFF7FEFF 		bl	Error_Handler
 556              	.LVL12:
 557              	.L30:
 155:Core/Src/main.c ****   }
 558              		.loc 1 155 5 view .LVU173
 559 0094 FFF7FEFF 		bl	Error_Handler
 560              	.LVL13:
 561              	.L32:
 562              		.align	2
 563              	.L31:
 564 0098 00380240 		.word	1073887232
 565 009c 00700040 		.word	1073770496
 566              		.cfi_endproc
 567              	.LFE131:
 569              		.section	.text.main,"ax",%progbits
 570              		.align	1
 571              		.global	main
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
 576              	main:
 577              	.LFB130:
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
ARM GAS  /tmp/ccsMTzma.s 			page 21


 578              		.loc 1 71 1 view -0
 579              		.cfi_startproc
 580              		@ Volatile: function does not return.
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583 0000 08B5     		push	{r3, lr}
 584              	.LCFI10:
 585              		.cfi_def_cfa_offset 8
 586              		.cfi_offset 3, -8
 587              		.cfi_offset 14, -4
  79:Core/Src/main.c **** 
 588              		.loc 1 79 3 view .LVU175
 589 0002 FFF7FEFF 		bl	HAL_Init
 590              	.LVL14:
  86:Core/Src/main.c **** 
 591              		.loc 1 86 3 view .LVU176
 592 0006 FFF7FEFF 		bl	SystemClock_Config
 593              	.LVL15:
  93:Core/Src/main.c ****   MX_USART1_UART_Init();
 594              		.loc 1 93 3 view .LVU177
 595 000a FFF7FEFF 		bl	MX_GPIO_Init
 596              	.LVL16:
  94:Core/Src/main.c ****   MX_USART2_UART_Init();
 597              		.loc 1 94 3 view .LVU178
 598 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 599              	.LVL17:
  95:Core/Src/main.c ****   MX_USART6_UART_Init();
 600              		.loc 1 95 3 view .LVU179
 601 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 602              	.LVL18:
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 603              		.loc 1 96 3 view .LVU180
 604 0016 FFF7FEFF 		bl	MX_USART6_UART_Init
 605              	.LVL19:
 606              	.L34:
 103:Core/Src/main.c ****   {
 607              		.loc 1 103 3 discriminator 1 view .LVU181
 108:Core/Src/main.c ****   /* USER CODE END 3 */
 608              		.loc 1 108 3 discriminator 1 view .LVU182
 103:Core/Src/main.c ****   {
 609              		.loc 1 103 9 discriminator 1 view .LVU183
 610 001a FEE7     		b	.L34
 611              		.cfi_endproc
 612              	.LFE130:
 614              		.global	huart6
 615              		.global	huart2
 616              		.global	huart1
 617              		.section	.bss.huart1,"aw",%nobits
 618              		.align	2
 619              		.set	.LANCHOR0,. + 0
 622              	huart1:
 623 0000 00000000 		.space	68
 623      00000000 
 623      00000000 
 623      00000000 
 623      00000000 
 624              		.section	.bss.huart2,"aw",%nobits
ARM GAS  /tmp/ccsMTzma.s 			page 22


 625              		.align	2
 626              		.set	.LANCHOR1,. + 0
 629              	huart2:
 630 0000 00000000 		.space	68
 630      00000000 
 630      00000000 
 630      00000000 
 630      00000000 
 631              		.section	.bss.huart6,"aw",%nobits
 632              		.align	2
 633              		.set	.LANCHOR2,. + 0
 636              	huart6:
 637 0000 00000000 		.space	68
 637      00000000 
 637      00000000 
 637      00000000 
 637      00000000 
 638              		.text
 639              	.Letext0:
 640              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 641              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 642              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f410rx.h"
 643              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 644              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 645              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 646              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 647              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 648              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 649              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 650              		.file 13 "<built-in>"
ARM GAS  /tmp/ccsMTzma.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccsMTzma.s:20     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccsMTzma.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccsMTzma.s:165    .text.MX_GPIO_Init:000000000000009c $d
     /tmp/ccsMTzma.s:172    .text.Error_Handler:0000000000000000 $t
     /tmp/ccsMTzma.s:178    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccsMTzma.s:210    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccsMTzma.s:215    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccsMTzma.s:270    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccsMTzma.s:276    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccsMTzma.s:281    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccsMTzma.s:336    .text.MX_USART2_UART_Init:000000000000002c $d
     /tmp/ccsMTzma.s:342    .text.MX_USART6_UART_Init:0000000000000000 $t
     /tmp/ccsMTzma.s:347    .text.MX_USART6_UART_Init:0000000000000000 MX_USART6_UART_Init
     /tmp/ccsMTzma.s:402    .text.MX_USART6_UART_Init:000000000000002c $d
     /tmp/ccsMTzma.s:408    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccsMTzma.s:414    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccsMTzma.s:564    .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccsMTzma.s:570    .text.main:0000000000000000 $t
     /tmp/ccsMTzma.s:576    .text.main:0000000000000000 main
     /tmp/ccsMTzma.s:636    .bss.huart6:0000000000000000 huart6
     /tmp/ccsMTzma.s:629    .bss.huart2:0000000000000000 huart2
     /tmp/ccsMTzma.s:622    .bss.huart1:0000000000000000 huart1
     /tmp/ccsMTzma.s:618    .bss.huart1:0000000000000000 $d
     /tmp/ccsMTzma.s:625    .bss.huart2:0000000000000000 $d
     /tmp/ccsMTzma.s:632    .bss.huart6:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
